{"version":3,"file":"static/js/621.b258ef14.chunk.js","mappings":"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","sources":["components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRole } from '../contexts/RoleContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { USER_ROLES, ROLE_DISPLAY_NAMES } from '../constants/roles';\r\nimport { useUserManagementPermissions } from '../hooks/usePermissions';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst UserManagement = () => {\r\n  const { \r\n    users, \r\n    isLoading, \r\n    error, \r\n    assignRole, \r\n    removeRole, \r\n    loadUsers, \r\n    clearError,\r\n    currentUserRole,\r\n    getUsersByRole \r\n  } = useRole();\r\n  \r\n  const { user: currentUser } = useAuth();\r\n  const { canViewUsers, canEditUsers, canAssignRoles } = useUserManagementPermissions();\r\n  \r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [newRole, setNewRole] = useState('');\r\n  const [isAssigning, setIsAssigning] = useState(false);\r\n  const [filterRole, setFilterRole] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n  const [actionType, setActionType] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (canViewUsers) {\r\n      loadUsers();\r\n    }\r\n  }, [canViewUsers, loadUsers]);\r\n\r\n  // Filter users based on search and role filter\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = user.userId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (user.assignedBy && user.assignedBy.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    const matchesRole = filterRole === 'all' || user.role === filterRole;\r\n    return matchesSearch && matchesRole;\r\n  });\r\n\r\n  // Check if current user can assign a specific role\r\n  const canAssignRole = (roleToAssign) => {\r\n    if (!canAssignRoles) return false;\r\n    \r\n    // Admin can assign any role\r\n    if (currentUserRole === USER_ROLES.ADMIN) return true;\r\n    \r\n    // Supervisors can assign roles to PhD candidates only\r\n    if (currentUserRole === USER_ROLES.SUPERVISOR) {\r\n      return roleToAssign === USER_ROLES.PHD_CANDIDATE;\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  const handleRoleAssignment = async () => {\r\n    if (!selectedUser || !newRole) return;\r\n    \r\n    setIsAssigning(true);\r\n    const result = await assignRole(selectedUser.userId, newRole, currentUser.id);\r\n    \r\n    if (result.success) {\r\n      setSelectedUser(null);\r\n      setNewRole('');\r\n      setShowConfirmDialog(false);\r\n    }\r\n    \r\n    setIsAssigning(false);\r\n  };\r\n\r\n  const handleRoleRemoval = async () => {\r\n    if (!selectedUser) return;\r\n    \r\n    setIsAssigning(true);\r\n    const result = await removeRole(selectedUser.userId, currentUser.id);\r\n    \r\n    if (result.success) {\r\n      setSelectedUser(null);\r\n      setShowConfirmDialog(false);\r\n    }\r\n    \r\n    setIsAssigning(false);\r\n  };\r\n\r\n  const openConfirmDialog = (user, action, role = '') => {\r\n    setSelectedUser(user);\r\n    setActionType(action);\r\n    setNewRole(role);\r\n    setShowConfirmDialog(true);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getRoleStats = () => {\r\n    const stats = Object.values(USER_ROLES).reduce((acc, role) => {\r\n      acc[role] = getUsersByRole(role).length;\r\n      return acc;\r\n    }, {});\r\n    return stats;\r\n  };\r\n\r\n  if (!canViewUsers) {\r\n    return (\r\n      <div className=\"p-6 text-center\">\r\n        <h3 className=\"text-lg font-semibold text-red-600\">Access Denied</h3>\r\n        <p className=\"text-gray-600\">You don&rsquo;t have permission to view user management.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <LoadingSpinner />\r\n        <p className=\"text-center mt-4\">Loading users...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const roleStats = getRoleStats();\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-7xl mx-auto\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">User Management</h2>\r\n        <p className=\"text-gray-600\">Manage user roles and permissions</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <p className=\"text-red-800\">{error}</p>\r\n            <button\r\n              onClick={clearError}\r\n              className=\"text-red-600 hover:text-red-800\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Role Statistics */}\r\n      <div className=\"mb-6 grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        {Object.entries(roleStats).map(([role, count]) => (\r\n          <div key={role} className=\"bg-white p-4 border border-gray-200 rounded-lg shadow-sm\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">{count}</div>\r\n            <div className=\"text-sm text-gray-600\">{ROLE_DISPLAY_NAMES[role]}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Filters and Search */}\r\n      <div className=\"mb-6 bg-white p-4 border border-gray-200 rounded-lg shadow-sm\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Search Users\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"Search by user ID or assigned by...\"\r\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Filter by Role\r\n            </label>\r\n            <select\r\n              value={filterRole}\r\n              onChange={(e) => setFilterRole(e.target.value)}\r\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"all\">All Roles</option>\r\n              {Object.entries(ROLE_DISPLAY_NAMES).map(([role, displayName]) => (\r\n                <option key={role} value={role}>{displayName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Users Table */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  User ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Role\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Assigned Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Assigned By\r\n                </th>\r\n                {canAssignRoles && (\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredUsers.map((user) => (\r\n                <tr key={user.userId} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {user.userId}\r\n                    {user.userId === currentUser.id && (\r\n                      <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n                        You\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                      user.role === USER_ROLES.ADMIN ? 'bg-purple-100 text-purple-800' :\r\n                      user.role === USER_ROLES.SUPERVISOR ? 'bg-green-100 text-green-800' :\r\n                      user.role === USER_ROLES.VIVA_COMMISSION ? 'bg-yellow-100 text-yellow-800' :\r\n                      'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {ROLE_DISPLAY_NAMES[user.role]}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {formatDate(user.assignedAt)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {user.assignedBy}\r\n                  </td>\r\n                  {canAssignRoles && (\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\r\n                      {user.userId !== currentUser.id && (\r\n                        <>\r\n                          <div className=\"flex space-x-2\">\r\n                            <select\r\n                              onChange={(e) => {\r\n                                if (e.target.value && canAssignRole(e.target.value)) {\r\n                                  openConfirmDialog(user, 'assign', e.target.value);\r\n                                }\r\n                                e.target.value = '';\r\n                              }}\r\n                              className=\"text-sm border border-gray-300 rounded-md px-2 py-1\"\r\n                              defaultValue=\"\"\r\n                            >\r\n                              <option value=\"\">Change Role</option>\r\n                              {Object.entries(ROLE_DISPLAY_NAMES).map(([role, displayName]) => (\r\n                                canAssignRole(role) && role !== user.role && (\r\n                                  <option key={role} value={role}>{displayName}</option>\r\n                                )\r\n                              ))}\r\n                            </select>\r\n                            <button\r\n                              onClick={() => openConfirmDialog(user, 'remove')}\r\n                              className=\"text-red-600 hover:text-red-900\"\r\n                            >\r\n                              Remove Role\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          \r\n          {filteredUsers.length === 0 && (\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n              No users found matching your criteria.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirmation Dialog */}\r\n      {showConfirmDialog && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n            <div className=\"mt-3 text-center\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\r\n                Confirm Action\r\n              </h3>\r\n              <div className=\"mt-2 px-7 py-3\">\r\n                {actionType === 'assign' ? (\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Are you sure you want to assign the role &ldquo;{ROLE_DISPLAY_NAMES[newRole]}&rdquo; to user &ldquo;{selectedUser?.userId}&rdquo;?\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Are you sure you want to remove the role from user &ldquo;{selectedUser?.userId}&rdquo;?\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"flex justify-center space-x-4 mt-4\">\r\n                <button\r\n                  onClick={() => setShowConfirmDialog(false)}\r\n                  className=\"px-4 py-2 bg-gray-300 text-gray-800 text-base font-medium rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n                  disabled={isAssigning}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={actionType === 'assign' ? handleRoleAssignment : handleRoleRemoval}\r\n                  className={`px-4 py-2 text-white text-base font-medium rounded-md focus:outline-none focus:ring-2 ${\r\n                    actionType === 'assign' \r\n                      ? 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-300'\r\n                      : 'bg-red-600 hover:bg-red-700 focus:ring-red-300'\r\n                  }`}\r\n                  disabled={isAssigning}\r\n                >\r\n                  {isAssigning ? 'Processing...' : 'Confirm'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement; "],"names":["UserManagement","users","isLoading","error","assignRole","removeRole","loadUsers","clearError","currentUserRole","getUsersByRole","useRole","user","currentUser","useAuth","canViewUsers","canEditUsers","canAssignRoles","useUserManagementPermissions","selectedUser","setSelectedUser","useState","newRole","setNewRole","isAssigning","setIsAssigning","filterRole","setFilterRole","searchTerm","setSearchTerm","showConfirmDialog","setShowConfirmDialog","actionType","setActionType","useEffect","filteredUsers","filter","matchesSearch","userId","toLowerCase","includes","assignedBy","matchesRole","role","canAssignRole","roleToAssign","USER_ROLES","ADMIN","SUPERVISOR","PHD_CANDIDATE","openConfirmDialog","action","arguments","length","undefined","_jsxs","className","children","_jsx","LoadingSpinner","roleStats","Object","values","reduce","acc","onClick","entries","map","_ref","count","ROLE_DISPLAY_NAMES","type","value","onChange","e","target","placeholder","_ref2","displayName","id","VIVA_COMMISSION","dateString","assignedAt","Date","toLocaleDateString","year","month","day","hour","minute","_Fragment","defaultValue","_ref3","disabled","async","success"],"sourceRoot":""}