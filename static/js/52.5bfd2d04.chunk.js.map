{"version":3,"file":"static/js/52.5bfd2d04.chunk.js","mappings":"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","sources":["components/FileUpload.js","components/FileUploadPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Uppy from '@uppy/core';\r\nimport { Dashboard } from '@uppy/react';\r\nimport XHRUpload from '@uppy/xhr-upload';\r\n\r\n// Import Uppy CSS\r\nimport '@uppy/core/dist/style.css';\r\nimport '@uppy/dashboard/dist/style.css';\r\nimport '@uppy/drag-drop/dist/style.css';\r\nimport '@uppy/file-input/dist/style.css';\r\nimport '@uppy/progress-bar/dist/style.css';\r\nimport '@uppy/status-bar/dist/style.css';\r\n\r\nconst FileUpload = ({ onUploadComplete, onUploadError, maxFiles = 10 }) => {\r\n  const [uppy, setUppy] = useState(null);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [uploadErrors, setUploadErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Initialize Uppy instance\r\n    const uppyInstance = new Uppy({\r\n      id: 'FileUpload',\r\n      autoProceed: false,\r\n      allowMultipleUploads: true,\r\n      debug: process.env.NODE_ENV === 'development',\r\n      restrictions: {\r\n        maxFileSize: null, // We'll handle this per file type\r\n        maxNumberOfFiles: maxFiles,\r\n        minNumberOfFiles: 1,\r\n        allowedFileTypes: ['.pdf', '.m4a', '.wav']\r\n      },\r\n      locale: {\r\n        strings: {\r\n          dropPasteFiles: 'Drop files here, paste or %{browseFiles}',\r\n          browseFiles: 'browse files',\r\n          uploadComplete: 'Upload complete',\r\n          uploadFailed: 'Upload failed',\r\n          noFilesFound: 'No files found',\r\n          fileAdded: 'File added',\r\n          fileRemoved: 'File removed',\r\n          uploadStarted: 'Upload started'\r\n        }\r\n      }\r\n    });\r\n\r\n    // File type and size validation\r\n    uppyInstance.addPreProcessor((fileIDs) => {\r\n      return new Promise((resolve) => {\r\n        const errors = [];\r\n        \r\n        fileIDs.forEach(fileID => {\r\n          const file = uppyInstance.getFile(fileID);\r\n          const fileExtension = file.name.toLowerCase().split('.').pop();\r\n          \r\n          // Define file size limits in bytes\r\n          const sizeLimits = {\r\n            'pdf': 50 * 1024 * 1024,  // 50MB\r\n            'm4a': 100 * 1024 * 1024, // 100MB\r\n            'wav': 200 * 1024 * 1024  // 200MB\r\n          };\r\n          \r\n          // Check file size based on type\r\n          if (sizeLimits[fileExtension] && file.size > sizeLimits[fileExtension]) {\r\n            const limitMB = sizeLimits[fileExtension] / (1024 * 1024);\r\n            errors.push(`File \"${file.name}\" exceeds ${limitMB}MB size limit for ${fileExtension.toUpperCase()} files`);\r\n            uppyInstance.removeFile(fileID);\r\n          }\r\n          \r\n          // Additional validation for file types\r\n          if (!['pdf', 'm4a', 'wav'].includes(fileExtension)) {\r\n            errors.push(`File \"${file.name}\" has unsupported format. Only PDF, M4A, and WAV files are allowed.`);\r\n            uppyInstance.removeFile(fileID);\r\n          }\r\n        });\r\n        \r\n        if (errors.length > 0) {\r\n          setUploadErrors(prev => [...prev, ...errors]);\r\n          // Still resolve to allow other files to proceed\r\n          resolve();\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n\r\n    // Configure XHR Upload (you'll need to replace with your actual upload endpoint)\r\n    uppyInstance.use(XHRUpload, {\r\n      endpoint: '/api/upload', // Replace with your actual upload endpoint\r\n      method: 'POST',\r\n      formData: true,\r\n      fieldName: 'files',\r\n      limit: 3, // Number of concurrent uploads\r\n      timeout: 30000, // 30 seconds timeout\r\n      headers: {\r\n        // Add any required headers here\r\n      }\r\n    });\r\n\r\n    // Event listeners\r\n    uppyInstance.on('file-added', (file) => {\r\n      // File added successfully\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('File added:', file);\r\n      }\r\n      // Clear previous errors when new files are added\r\n      setUploadErrors([]);\r\n    });\r\n\r\n    uppyInstance.on('file-removed', (file) => {\r\n      // File removed\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('File removed:', file);\r\n      }\r\n    });\r\n\r\n    uppyInstance.on('upload-progress', (file, progress) => {\r\n      // Upload progress updated\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Upload progress:', file.name, progress);\r\n      }\r\n    });\r\n\r\n    uppyInstance.on('upload-success', (file, response) => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Upload success:', file, response);\r\n      }\r\n      setUploadedFiles(prev => [...prev, { file, response }]);\r\n      \r\n      if (onUploadComplete) {\r\n        onUploadComplete(file, response);\r\n      }\r\n    });\r\n\r\n    uppyInstance.on('upload-error', (file, error, response) => {\r\n      // Log error in development only\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.error('Upload error:', file, error, response);\r\n      }\r\n      const errorMessage = `Failed to upload ${file.name}: ${error.message || 'Unknown error'}`;\r\n      setUploadErrors(prev => [...prev, errorMessage]);\r\n      \r\n      if (onUploadError) {\r\n        onUploadError(file, error, response);\r\n      }\r\n    });\r\n\r\n    uppyInstance.on('complete', (result) => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Upload complete:', result);\r\n      }\r\n    });\r\n\r\n    setUppy(uppyInstance);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (uppyInstance) {\r\n        uppyInstance.close();\r\n      }\r\n    };\r\n  }, [maxFiles, onUploadComplete, onUploadError]);\r\n\r\n  // Format file size for display\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  // Clear all files\r\n  const clearAllFiles = () => {\r\n    if (uppy) {\r\n      uppy.cancelAll();\r\n      setUploadedFiles([]);\r\n      setUploadErrors([]);\r\n    }\r\n  };\r\n\r\n  // Clear errors\r\n  const clearErrors = () => {\r\n    setUploadErrors([]);\r\n  };\r\n\r\n  if (!uppy) {\r\n    return <div className=\"flex justify-center items-center p-8\">Loading file upload...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">File Upload</h2>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          Upload PDF, M4A, or WAV files. Size limits: PDF (50MB), M4A (100MB), WAV (200MB)\r\n        </p>\r\n        \r\n        {/* Error display */}\r\n        {uploadErrors.length > 0 && (\r\n          <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n            <div className=\"flex justify-between items-start\">\r\n              <div>\r\n                <h4 className=\"text-red-800 font-semibold mb-2\">Upload Errors:</h4>\r\n                <ul className=\"text-red-700 text-sm space-y-1\">\r\n                  {uploadErrors.map((error, index) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"text-red-500 mr-2\">•</span>\r\n                      {error}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <button\r\n                onClick={clearErrors}\r\n                className=\"text-red-500 hover:text-red-700 font-semibold text-sm\"\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Uppy Dashboard */}\r\n      <div className=\"mb-6\">\r\n        <Dashboard\r\n          uppy={uppy}\r\n          plugins={['Webcam']}\r\n          metaFields={[\r\n            { id: 'name', name: 'Name', placeholder: 'File name (optional)' },\r\n            { id: 'description', name: 'Description', placeholder: 'File description (optional)' }\r\n          ]}\r\n          note=\"Only PDF, M4A, and WAV files are allowed\"\r\n          height={400}\r\n          showProgressDetails={true}\r\n          showRemoveButtonAfterComplete={true}\r\n          locale={{\r\n            strings: {\r\n              dropPasteFiles: 'Drop files here, paste, or %{browseFiles}',\r\n              browseFiles: 'browse files',\r\n              uploadComplete: 'Upload complete!',\r\n              uploadFailed: 'Upload failed',\r\n              processing: 'Processing...',\r\n              uploadPaused: 'Upload paused',\r\n              resumeUpload: 'Resume upload',\r\n              pauseUpload: 'Pause upload',\r\n              retryUpload: 'Retry upload',\r\n              cancelUpload: 'Cancel upload',\r\n              xFilesSelected: {\r\n                0: '%{smart_count} file selected',\r\n                1: '%{smart_count} files selected'\r\n              },\r\n              uploadingXFiles: {\r\n                0: 'Uploading %{smart_count} file',\r\n                1: 'Uploading %{smart_count} files'\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Upload controls */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={() => uppy.upload()}\r\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            disabled={!uppy || Object.keys(uppy.getState().files).length === 0}\r\n          >\r\n            Start Upload\r\n          </button>\r\n          <button\r\n            onClick={clearAllFiles}\r\n            className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n          >\r\n            Clear All\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"text-sm text-gray-600\">\r\n          Files: {uppy ? Object.keys(uppy.getState().files).length : 0} / {maxFiles}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Successfully uploaded files */}\r\n      {uploadedFiles.length > 0 && (\r\n        <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n          <h4 className=\"text-green-800 font-semibold mb-3\">Successfully Uploaded Files:</h4>\r\n          <div className=\"space-y-2\">\r\n            {uploadedFiles.map((item, index) => (\r\n              <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-green-600 mr-2\">✓</span>\r\n                  <div>\r\n                    <div className=\"font-medium text-gray-800\">{item.file.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">\r\n                      {formatFileSize(item.file.size)} • {item.file.type || 'Unknown type'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  {new Date().toLocaleDateString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* File type information */}\r\n      <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n        <h4 className=\"text-blue-800 font-semibold mb-2\">Supported File Types & Limits:</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-12 h-8 bg-red-100 text-red-800 rounded text-xs font-semibold flex items-center justify-center mr-3\">\r\n              PDF\r\n            </span>\r\n            <span className=\"text-gray-700\">Max 50MB</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-12 h-8 bg-green-100 text-green-800 rounded text-xs font-semibold flex items-center justify-center mr-3\">\r\n              M4A\r\n            </span>\r\n            <span className=\"text-gray-700\">Max 100MB</span>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"w-12 h-8 bg-blue-100 text-blue-800 rounded text-xs font-semibold flex items-center justify-center mr-3\">\r\n              WAV\r\n            </span>\r\n            <span className=\"text-gray-700\">Max 200MB</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFileUpload.propTypes = {\r\n  onUploadComplete: PropTypes.func,\r\n  onUploadError: PropTypes.func,\r\n  maxFiles: PropTypes.number\r\n};\r\n\r\nexport default FileUpload; ","import React, { useState } from 'react';\r\nimport FileUpload from './FileUpload';\r\n\r\nconst FileUploadPage = () => {\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [uploadErrors, setUploadErrors] = useState([]);\r\n\r\n  const handleUploadComplete = (file, response) => {\r\n    // Upload completed successfully\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Upload completed:', file.name, response);\r\n    }\r\n    setUploadedFiles(prev => [...prev, { file, response, timestamp: new Date() }]);\r\n  };\r\n\r\n  const handleUploadError = (file, error) => {\r\n    // Upload failed\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Upload failed:', file.name, error);\r\n    }\r\n    setUploadErrors(prev => [...prev, { \r\n      filename: file.name, \r\n      error: error.message || 'Unknown error',\r\n      timestamp: new Date()\r\n    }]);\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    setUploadedFiles([]);\r\n    setUploadErrors([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* Page Header - Mobile Optimized */}\r\n        <div className=\"mb-6 sm:mb-8\">\r\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">\r\n            📁 File Upload System\r\n          </h1>\r\n          <p className=\"text-base sm:text-lg text-gray-600\">\r\n            Upload and manage your PDF documents and audio files for your thesis project.\r\n          </p>\r\n        </div>\r\n\r\n        {/* File Upload Component */}\r\n        <div className=\"mb-6 sm:mb-8\">\r\n          <FileUpload\r\n            onUploadComplete={handleUploadComplete}\r\n            onUploadError={handleUploadError}\r\n            maxFiles={20}\r\n          />\r\n        </div>\r\n\r\n        {/* Upload History and Statistics - Mobile First Grid */}\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4 sm:gap-6\">\r\n          {/* Upload Statistics */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <svg className=\"w-5 h-5 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4\" />\r\n              </svg>\r\n              Upload Statistics\r\n            </h3>\r\n            <div className=\"space-y-3 sm:space-y-4\">\r\n              <div className=\"flex justify-between items-center p-3 sm:p-4 bg-green-50 rounded-lg border border-green-200 touch-manipulation\">\r\n                <span className=\"text-green-800 font-medium text-sm sm:text-base\">Successful Uploads</span>\r\n                <span className=\"text-green-600 font-bold text-xl sm:text-2xl\">{uploadedFiles.length}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center p-3 sm:p-4 bg-red-50 rounded-lg border border-red-200 touch-manipulation\">\r\n                <span className=\"text-red-800 font-medium text-sm sm:text-base\">Failed Uploads</span>\r\n                <span className=\"text-red-600 font-bold text-xl sm:text-2xl\">{uploadErrors.length}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center p-3 sm:p-4 bg-blue-50 rounded-lg border border-blue-200 touch-manipulation\">\r\n                <span className=\"text-blue-800 font-medium text-sm sm:text-base\">Total Attempts</span>\r\n                <span className=\"text-blue-600 font-bold text-xl sm:text-2xl\">{uploadedFiles.length + uploadErrors.length}</span>\r\n              </div>\r\n            </div>\r\n            {(uploadedFiles.length > 0 || uploadErrors.length > 0) && (\r\n              <button\r\n                onClick={clearHistory}\r\n                className=\"mt-4 w-full px-4 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors touch-manipulation min-h-[48px] flex items-center justify-center\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                </svg>\r\n                Clear History\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Recent Activity */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <svg className=\"w-5 h-5 mr-2 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n              Recent Activity\r\n            </h3>\r\n            <div className=\"space-y-2 sm:space-y-3 max-h-64 sm:max-h-80 overflow-y-auto\">\r\n              {/* Recent successful uploads */}\r\n              {uploadedFiles.slice(-5).reverse().map((item, index) => (\r\n                <div key={`success-${index}`} className=\"flex items-center p-3 bg-green-50 rounded-lg border border-green-200 touch-manipulation\">\r\n                  <span className=\"text-green-600 mr-3 text-lg\">✅</span>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                      {item.file.name}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {item.timestamp.toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              \r\n              {/* Recent errors */}\r\n              {uploadErrors.slice(-3).reverse().map((item, index) => (\r\n                <div key={`error-${index}`} className=\"flex items-center p-3 bg-red-50 rounded-lg border border-red-200 touch-manipulation\">\r\n                  <span className=\"text-red-600 mr-3 text-lg\">❌</span>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                      {item.filename}\r\n                    </div>\r\n                    <div className=\"text-xs text-red-600 truncate\">\r\n                      {item.error}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {item.timestamp.toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              {uploadedFiles.length === 0 && uploadErrors.length === 0 && (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  <svg className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                  </svg>\r\n                  <p className=\"font-medium\">No upload activity yet.</p>\r\n                  <p className=\"text-sm\">Upload some files to see activity here.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Instructions - Mobile Optimized */}\r\n        <div className=\"mt-6 sm:mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4 sm:p-6\">\r\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-3 flex items-center\">\r\n            <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            How to Use\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 text-sm text-blue-800\">\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"font-medium mb-2 flex items-center\">\r\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                </svg>\r\n                Supported Files:\r\n              </h4>\r\n              <ul className=\"space-y-1 pl-4\">\r\n                <li>• PDF documents (up to 50MB)</li>\r\n                <li>• M4A audio files (up to 100MB)</li>\r\n                <li>• WAV audio files (up to 200MB)</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"font-medium mb-2 flex items-center\">\r\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                </svg>\r\n                Upload Methods:\r\n              </h4>\r\n              <ul className=\"space-y-1 pl-4\">\r\n                <li>• Drag and drop files to the upload area</li>\r\n                <li>• Tap &ldquo;browse files&rdquo; to select files</li>\r\n                <li>• Upload multiple files at once</li>\r\n                <li>• Monitor progress in real-time</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Developer Note */}\r\n        <div className=\"mt-4 sm:mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n          <div className=\"flex items-start space-x-2\">\r\n            <svg className=\"w-5 h-5 text-yellow-600 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.88-.833-2.5 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n            </svg>\r\n            <div>\r\n              <p className=\"text-sm text-yellow-800\">\r\n                <strong>Note:</strong> This is a demonstration of the file upload system. \r\n                In a production environment, you would need to configure a proper backend endpoint \r\n                to handle file uploads. Currently, the upload endpoint is set to &lsquo;/api/upload&rsquo; \r\n                which you&rsquo;ll need to implement on your server.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadPage; "],"names":["_ref","onUploadComplete","onUploadError","maxFiles","uppy","setUppy","useState","uploadedFiles","setUploadedFiles","uploadErrors","setUploadErrors","useEffect","uppyInstance","Uppy","id","autoProceed","allowMultipleUploads","debug","process","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","locale","strings","dropPasteFiles","browseFiles","uploadComplete","uploadFailed","noFilesFound","fileAdded","fileRemoved","uploadStarted","addPreProcessor","fileIDs","Promise","resolve","errors","forEach","fileID","file","getFile","fileExtension","name","toLowerCase","split","pop","sizeLimits","size","limitMB","push","toUpperCase","removeFile","includes","length","prev","use","XHRUpload","endpoint","method","formData","fieldName","limit","timeout","headers","on","progress","response","error","errorMessage","message","result","close","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","toFixed","_jsxs","className","children","_jsx","map","index","onClick","clearErrors","Dashboard","plugins","metaFields","placeholder","note","height","showProgressDetails","showRemoveButtonAfterComplete","processing","uploadPaused","resumeUpload","pauseUpload","retryUpload","cancelUpload","xFilesSelected","uploadingXFiles","upload","disabled","Object","keys","getState","files","clearAllFiles","cancelAll","item","type","Date","toLocaleDateString","FileUploadPage","FileUpload","handleUploadComplete","timestamp","handleUploadError","filename","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","clearHistory","slice","reverse","toLocaleString"],"sourceRoot":""}