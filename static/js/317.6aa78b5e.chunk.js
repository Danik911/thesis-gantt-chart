"use strict";(self.webpackChunkthesis_gantt_chart=self.webpackChunkthesis_gantt_chart||[]).push([[317],{8317:(e,t,a)=>{a.r(t),a.d(t,{default:()=>o});var s=a(5043),r=a(3093);const i=new class{constructor(){this.cache=new Map,this.cacheExpiry=new Map,this.rateLimitRemaining=5e3,this.rateLimitReset=Date.now(),this.requestQueue=[],this.isProcessingQueue=!1,this.maxCacheSize=100,this.cacheExpiryTime=3e5,this.defaultStructure={documents:"documents",tasks:"tasks",projects:"projects",templates:"templates",uploads:"uploads"}}async getOctokit(){const e=r.A.getOctokit();if(!e)throw new Error("Not authenticated. Please login first.");return e}async handleRateLimit(){const e=Date.now();if(this.rateLimitRemaining<=10&&e<this.rateLimitReset){const t=this.rateLimitReset-e;console.warn(`Rate limit approaching. Waiting ${t}ms`),await new Promise((e=>setTimeout(e,t)))}}updateRateLimit(e){e["x-ratelimit-remaining"]&&(this.rateLimitRemaining=parseInt(e["x-ratelimit-remaining"])),e["x-ratelimit-reset"]&&(this.rateLimitReset=1e3*parseInt(e["x-ratelimit-reset"]))}getCachedData(e){const t=Date.now(),a=this.cacheExpiry.get(e);return a&&t>a?(this.cache.delete(e),this.cacheExpiry.delete(e),null):this.cache.get(e)}setCachedData(e,t){if(this.cache.size>=this.maxCacheSize){const e=this.cache.keys().next().value;this.cache.delete(e),this.cacheExpiry.delete(e)}this.cache.set(e,t),this.cacheExpiry.set(e,Date.now()+this.cacheExpiryTime)}clearCache(){this.cache.clear(),this.cacheExpiry.clear()}async createFolderStructure(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";try{await this.handleRateLimit();const r=await this.getOctokit(),i=Object.values(this.defaultStructure),l=[];for(const n of i){const i=a?`${a}/${n}`:n,o=`${i}/README.md`;try{await r.rest.repos.getContent({owner:e,repo:t,path:o})}catch(s){if(404!==s.status)throw s;{const a=`# ${n.charAt(0).toUpperCase()+n.slice(1)}\n\nThis folder contains ${n} for the project.`;await r.rest.repos.createOrUpdateFileContents({owner:e,repo:t,path:o,message:`Create ${n} folder`,content:Buffer.from(a).toString("base64")}),l.push(i)}}}return{success:!0,createdFolders:l,structure:this.defaultStructure}}catch(s){throw console.error("Failed to create folder structure:",s),new Error(`Failed to create folder structure: ${s.message}`)}}async uploadFile(e,t,a,s,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"main";try{await this.handleRateLimit();const n=await this.getOctokit();let o;if("string"===typeof s)o=Buffer.from(s).toString("base64");else if(s instanceof ArrayBuffer)o=Buffer.from(s).toString("base64");else{if(!(s instanceof Blob))throw new Error("Unsupported content type");{const e=await s.arrayBuffer();o=Buffer.from(e).toString("base64")}}let c=null;try{const s=await n.rest.repos.getContent({owner:e,repo:t,path:a,ref:i});s.data.sha&&(c=s.data.sha)}catch(l){if(404!==l.status)throw l}const d={owner:e,repo:t,path:a,message:r||`Upload ${a}`,content:o,branch:i};c&&(d.sha=c);const h=await n.rest.repos.createOrUpdateFileContents(d);this.updateRateLimit(h.headers);const u=`${e}/${t}/${a}`;this.cache.delete(u),this.cacheExpiry.delete(u);const m=this.generateFileLink(e,t,a,i);return{success:!0,sha:h.data.content.sha,url:h.data.content.html_url,downloadUrl:h.data.content.download_url,accessibleLink:m,commit:h.data.commit}}catch(l){throw console.error("File upload failed:",l),new Error(`File upload failed: ${l.message}`)}}async updateFile(e,t,a,s,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"main";try{await this.handleRateLimit();const l=await this.getOctokit(),n=await l.rest.repos.getContent({owner:e,repo:t,path:a,ref:i});if(!n.data.sha)throw new Error("File not found or unable to get file SHA");let o;if("string"===typeof s)o=Buffer.from(s).toString("base64");else if(s instanceof ArrayBuffer)o=Buffer.from(s).toString("base64");else{if(!(s instanceof Blob))throw new Error("Unsupported content type");{const e=await s.arrayBuffer();o=Buffer.from(e).toString("base64")}}const c=await l.rest.repos.createOrUpdateFileContents({owner:e,repo:t,path:a,message:r||`Update ${a}`,content:o,sha:n.data.sha,branch:i});this.updateRateLimit(c.headers);const d=`${e}/${t}/${a}`;return this.cache.delete(d),this.cacheExpiry.delete(d),{success:!0,sha:c.data.content.sha,url:c.data.content.html_url,downloadUrl:c.data.content.download_url,commit:c.data.commit}}catch(l){throw console.error("File update failed:",l),new Error(`File update failed: ${l.message}`)}}async deleteFile(e,t,a,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"main";try{await this.handleRateLimit();const i=await this.getOctokit(),l=await i.rest.repos.getContent({owner:e,repo:t,path:a,ref:r});if(!l.data.sha)throw new Error("File not found or unable to get file SHA");const n=await i.rest.repos.deleteFile({owner:e,repo:t,path:a,message:s||`Delete ${a}`,sha:l.data.sha,branch:r});this.updateRateLimit(n.headers);const o=`${e}/${t}/${a}`;return this.cache.delete(o),this.cacheExpiry.delete(o),{success:!0,commit:n.data.commit}}catch(i){throw console.error("File deletion failed:",i),new Error(`File deletion failed: ${i.message}`)}}async getFileContent(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"main";try{const r=`${e}/${t}/${a}`,i=this.getCachedData(r);if(i)return i;await this.handleRateLimit();const l=await this.getOctokit(),n=await l.rest.repos.getContent({owner:e,repo:t,path:a,ref:s});this.updateRateLimit(n.headers);const o={content:Buffer.from(n.data.content,"base64").toString(),sha:n.data.sha,size:n.data.size,url:n.data.html_url,downloadUrl:n.data.download_url,type:n.data.type,encoding:n.data.encoding};return this.setCachedData(r,o),o}catch(r){throw console.error("Failed to get file content:",r),new Error(`Failed to get file content: ${r.message}`)}}async listFiles(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"main";try{const r=`${e}/${t}/list/${a}`,i=this.getCachedData(r);if(i)return i;await this.handleRateLimit();const l=await this.getOctokit(),n=await l.rest.repos.getContent({owner:e,repo:t,path:a,ref:s});this.updateRateLimit(n.headers);const o=Array.isArray(n.data)?n.data.map((e=>({name:e.name,path:e.path,type:e.type,size:e.size,sha:e.sha,url:e.html_url,downloadUrl:e.download_url}))):[{name:n.data.name,path:n.data.path,type:n.data.type,size:n.data.size,sha:n.data.sha,url:n.data.html_url,downloadUrl:n.data.download_url}];return this.setCachedData(r,o),o}catch(r){throw console.error("Failed to list files:",r),new Error(`Failed to list files: ${r.message}`)}}generateFileLink(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"main";return{raw:`https://raw.githubusercontent.com/${e}/${t}/${s}/${a}`,blob:`https://github.com/${e}/${t}/blob/${s}/${a}`,download:`https://github.com/${e}/${t}/raw/${s}/${a}`}}async resolveConflict(e,t,a,s,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"main";try{await this.handleRateLimit();const l=await this.getOctokit(),n=await l.rest.repos.getContent({owner:e,repo:t,path:a,ref:i}),o=Buffer.from(n.data.content,"base64").toString(),c=`${a}.backup.${(new Date).toISOString().replace(/:/g,"-")}`;await this.uploadFile(e,t,c,o,`Backup before conflict resolution for ${a}`,i);return{success:!0,resolution:"backup_and_update",backupPath:c,updateResult:await this.updateFile(e,t,a,s,r||`Resolve conflict in ${a}`,i),conflictInfo:{latestSha:n.data.sha,backupCreated:!0}}}catch(l){throw console.error("Conflict resolution failed:",l),new Error(`Conflict resolution failed: ${l.message}`)}}async processBatchOperations(e){const t=[];for(const s of e)try{let e;switch(s.type){case"upload":e=await this.uploadFile(s.owner,s.repo,s.path,s.content,s.message,s.branch);break;case"update":e=await this.updateFile(s.owner,s.repo,s.path,s.content,s.message,s.branch);break;case"delete":e=await this.deleteFile(s.owner,s.repo,s.path,s.message,s.branch);break;default:throw new Error(`Unknown operation type: ${s.type}`)}t.push({operation:s,result:e,success:!0})}catch(a){t.push({operation:s,error:a.message,success:!1})}return t}async getRepositoryInfo(e,t){try{await this.handleRateLimit();const a=await this.getOctokit(),s=await a.rest.repos.get({owner:e,repo:t});return this.updateRateLimit(s.headers),{name:s.data.name,fullName:s.data.full_name,description:s.data.description,private:s.data.private,defaultBranch:s.data.default_branch,permissions:s.data.permissions,size:s.data.size,language:s.data.language,createdAt:s.data.created_at,updatedAt:s.data.updated_at}}catch(a){throw console.error("Failed to get repository info:",a),new Error(`Failed to get repository info: ${a.message}`)}}getRateLimitStatus(){return{remaining:this.rateLimitRemaining,reset:new Date(this.rateLimitReset),resetIn:Math.max(0,this.rateLimitReset-Date.now())}}getCacheStatus(){return{size:this.cache.size,maxSize:this.maxCacheSize,keys:Array.from(this.cache.keys())}}};var l=a(9144),n=a(579);const o=()=>{const[e,t]=(0,s.useState)(!1),[a,o]=(0,s.useState)([]),[c,d]=(0,s.useState)(""),[h,u]=(0,s.useState)(""),[m,p]=(0,s.useState)([]),[g,f]=(0,s.useState)(!1),[x,w]=(0,s.useState)(""),[b,y]=(0,s.useState)(""),[v,j]=(0,s.useState)(null),[$,N]=(0,s.useState)(""),[F,C]=(0,s.useState)(!1),[S,k]=(0,s.useState)(null),[R,L]=(0,s.useState)(""),[E,B]=(0,s.useState)(""),[_,D]=(0,s.useState)(null),[z,A]=(0,s.useState)(null),U=(0,s.useRef)(null);(0,s.useEffect)((()=>{O()}),[]),(0,s.useEffect)((()=>{e&&(M(),I())}),[e]),(0,s.useEffect)((()=>{c&&P()}),[c,h]);const O=async()=>{try{const e=r.A.isAuthenticated();t(e),e&&await r.A.validateToken()}catch(x){console.error("Authentication check failed:",x),w("Authentication check failed")}},M=async()=>{try{f(!0);const e=await r.A.getRepositories();o(e)}catch(x){w(`Failed to load repositories: ${x.message}`)}finally{f(!1)}},P=async()=>{if(c)try{f(!0);const[e,t]=c.split("/"),a=await i.listFiles(e,t,h);p(a),w("")}catch(x){w(`Failed to load files: ${x.message}`)}finally{f(!1)}},I=()=>{const e=i.getRateLimitStatus(),t=i.getCacheStatus();D(e),A(t)},H=async e=>{if("file"===e.type)try{f(!0);const[t,a]=c.split("/"),s=await i.getFileContent(t,a,e.path);j(e),N(s.content),C(!1),I()}catch(x){w(`Failed to load file content: ${x.message}`)}finally{f(!1)}else"dir"===e.type&&(t=e.path,u(t),j(null),N(""),C(!1));var t},T=e=>{if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]};return e?(0,n.jsxs)("div",{className:"max-w-6xl mx-auto p-6 bg-white rounded-lg shadow-lg",children:[(0,n.jsxs)("div",{className:"mb-6",children:[(0,n.jsx)("h2",{className:"text-2xl font-bold text-gray-800 mb-4",children:"GitHub File Manager"}),(0,n.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4",children:[_&&(0,n.jsxs)("div",{className:"bg-blue-50 p-3 rounded-lg",children:[(0,n.jsx)("h4",{className:"font-semibold text-blue-800",children:"Rate Limit Status"}),(0,n.jsxs)("p",{className:"text-sm text-blue-600",children:["Remaining: ",_.remaining," | Reset: ",(G=_.reset,new Date(G).toLocaleString())]})]}),z&&(0,n.jsxs)("div",{className:"bg-green-50 p-3 rounded-lg",children:[(0,n.jsx)("h4",{className:"font-semibold text-green-800",children:"Cache Status"}),(0,n.jsxs)("p",{className:"text-sm text-green-600",children:["Size: ",z.size,"/",z.maxSize,(0,n.jsx)("button",{onClick:()=>{i.clearCache(),y("Cache cleared successfully"),I()},className:"ml-2 text-xs bg-green-200 hover:bg-green-300 px-2 py-1 rounded",children:"Clear"})]})]})]}),x&&(0,n.jsxs)("div",{className:"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg",children:[(0,n.jsx)("p",{className:"text-red-700",children:x}),(0,n.jsx)("button",{onClick:()=>w(""),className:"mt-2 text-sm text-red-600 hover:text-red-800",children:"Dismiss"})]}),b&&(0,n.jsxs)("div",{className:"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg",children:[(0,n.jsx)("p",{className:"text-green-700",children:b}),(0,n.jsx)("button",{onClick:()=>y(""),className:"mt-2 text-sm text-green-600 hover:text-green-800",children:"Dismiss"})]}),(0,n.jsxs)("div",{className:"mb-4",children:[(0,n.jsx)("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Select Repository:"}),(0,n.jsxs)("select",{value:c,onChange:e=>{return t=e.target.value,d(t),u(""),j(null),N(""),void C(!1);var t},className:"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent",children:[(0,n.jsx)("option",{value:"",children:"Choose a repository..."}),a.map((e=>(0,n.jsxs)("option",{value:e.full_name,children:[e.full_name," ",e.private?"(Private)":"(Public)"]},e.id)))]})]}),c&&(0,n.jsx)("div",{className:"mb-4",children:(0,n.jsx)("button",{onClick:async()=>{if(c)try{f(!0);const[e,t]=c.split("/"),a=await i.createFolderStructure(e,t);y(`Folder structure created: ${a.createdFolders.join(", ")}`),await P(),I()}catch(x){w(`Failed to create folder structure: ${x.message}`)}finally{f(!1)}},className:"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors",disabled:g,children:"Create Default Folder Structure"})})]}),g&&(0,n.jsx)("div",{className:"flex justify-center mb-4",children:(0,n.jsx)(l.A,{})}),c&&(0,n.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[(0,n.jsxs)("div",{className:"bg-gray-50 p-4 rounded-lg",children:[(0,n.jsxs)("div",{className:"flex items-center justify-between mb-4",children:[(0,n.jsx)("h3",{className:"text-lg font-semibold",children:"Files"}),(0,n.jsxs)("div",{className:"flex space-x-2",children:[h&&(0,n.jsx)("button",{onClick:()=>{const e=h.split("/").filter((e=>""!==e));e.pop(),u(e.join("/"))},className:"text-sm bg-gray-200 hover:bg-gray-300 px-3 py-1 rounded",children:"\u2190 Back"}),(0,n.jsx)("button",{onClick:P,className:"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded",children:"Refresh"})]})]}),(0,n.jsxs)("div",{className:"text-sm text-gray-600 mb-2",children:["Path: /",h||"root"]}),(0,n.jsx)("div",{className:"space-y-2 max-h-96 overflow-y-auto",children:m.map((e=>(0,n.jsx)("div",{className:"p-3 border rounded-lg cursor-pointer transition-colors "+(v&&v.path===e.path?"bg-blue-100 border-blue-300":"bg-white hover:bg-gray-100 border-gray-200"),onClick:()=>H(e),children:(0,n.jsxs)("div",{className:"flex items-center justify-between",children:[(0,n.jsxs)("div",{className:"flex items-center",children:[(0,n.jsx)("span",{className:"mr-2",children:"dir"===e.type?"\ud83d\udcc1":"\ud83d\udcc4"}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"font-medium",children:e.name}),"file"===e.type&&(0,n.jsx)("div",{className:"text-xs text-gray-500",children:T(e.size)})]})]}),"file"===e.type&&(0,n.jsx)("button",{onClick:t=>{t.stopPropagation(),(async e=>{if(!e||!c)return;if(window.confirm(`Are you sure you want to delete ${e.name}?`))try{f(!0);const[t,a]=c.split("/");await i.deleteFile(t,a,e.path,`Delete ${e.name}`),y(`File deleted successfully: ${e.name}`),v&&v.path===e.path&&(j(null),N(""),C(!1)),await P(),I()}catch(x){w(`File deletion failed: ${x.message}`)}finally{f(!1)}})(e)},className:"text-red-600 hover:text-red-800 text-sm",children:"Delete"})]})},e.path)))}),0===m.length&&!g&&(0,n.jsx)("div",{className:"text-center text-gray-500 py-8",children:"No files found in this directory"})]}),(0,n.jsxs)("div",{className:"space-y-6",children:[(0,n.jsxs)("div",{className:"bg-gray-50 p-4 rounded-lg",children:[(0,n.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Upload File"}),(0,n.jsxs)("div",{className:"space-y-3",children:[(0,n.jsx)("input",{ref:U,type:"file",onChange:e=>k(e.target.files[0]),className:"w-full p-2 border border-gray-300 rounded-lg"}),(0,n.jsx)("input",{type:"text",placeholder:"Custom file path (optional)",value:R,onChange:e=>L(e.target.value),className:"w-full p-2 border border-gray-300 rounded-lg"}),(0,n.jsx)("input",{type:"text",placeholder:"Commit message (optional)",value:E,onChange:e=>B(e.target.value),className:"w-full p-2 border border-gray-300 rounded-lg"}),(0,n.jsx)("button",{onClick:async()=>{if(S&&c)try{f(!0);const[e,t]=c.split("/"),a=R?`${h}/${R}`:`${h}/${S.name}`,s=await i.uploadFile(e,t,a,S,E||`Upload ${S.name}`);y(`File uploaded successfully: ${s.url}`),k(null),L(""),B(""),U.current&&(U.current.value=""),await P(),I()}catch(x){w(`File upload failed: ${x.message}`)}finally{f(!1)}},disabled:!S||g,className:"w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg transition-colors",children:"Upload File"})]})]}),v&&(0,n.jsxs)("div",{className:"bg-gray-50 p-4 rounded-lg",children:[(0,n.jsxs)("div",{className:"flex items-center justify-between mb-4",children:[(0,n.jsx)("h3",{className:"text-lg font-semibold",children:v.name}),(0,n.jsxs)("div",{className:"flex space-x-2",children:[(0,n.jsx)("button",{onClick:()=>C(!F),className:"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded",children:F?"View":"Edit"}),F&&(0,n.jsx)("button",{onClick:async()=>{if(v&&c)try{f(!0);const[e,t]=c.split("/"),a=await i.updateFile(e,t,v.path,$,E||`Update ${v.name}`);y(`File updated successfully: ${a.url}`),C(!1),B(""),I()}catch(x){w(`File update failed: ${x.message}`)}finally{f(!1)}},disabled:g,className:"text-sm bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded",children:"Save"})]})]}),F&&(0,n.jsx)("input",{type:"text",placeholder:"Commit message for update",value:E,onChange:e=>B(e.target.value),className:"w-full p-2 border border-gray-300 rounded-lg mb-3"}),(0,n.jsx)("div",{className:"border border-gray-300 rounded-lg",children:F?(0,n.jsx)("textarea",{value:$,onChange:e=>N(e.target.value),className:"w-full h-96 p-3 border-0 rounded-lg resize-none focus:ring-2 focus:ring-blue-500",placeholder:"File content..."}):(0,n.jsx)("pre",{className:"p-3 h-96 overflow-auto text-sm bg-white rounded-lg",children:$})})]})]})]})]}):(0,n.jsx)("div",{className:"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg",children:(0,n.jsxs)("div",{className:"text-center",children:[(0,n.jsx)("h2",{className:"text-2xl font-bold text-gray-800 mb-4",children:"GitHub File Manager"}),(0,n.jsx)("p",{className:"text-gray-600 mb-4",children:"Please log in to access GitHub file management features."})]})});var G}}}]);
//# sourceMappingURL=317.6aa78b5e.chunk.js.map